-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.account
(
    account_id serial NOT NULL,
	user_name character varying(30) NOT NULL,
	hashed_password text NOT NULL,
    email text,
    ethereum_address character varying(42),
    next_nonce integer NOT NULL DEFAULT 0,
    PRIMARY KEY (account_id),
	UNIQUE (user_name),
    UNIQUE (email),
    UNIQUE (ethereum_address)
);

CREATE TABLE IF NOT EXISTS public.session (
	account_id integer NOT NULL,
	jwt TEXT NOT NULL,
	PRIMARY KEY (account_id)
);

CREATE TABLE IF NOT EXISTS public.token_balance
(
    account_id integer NOT NULL,
    token_id integer NOT NULL,
    amount integer,
    PRIMARY KEY (account_id, token_id)
);

CREATE TABLE IF NOT EXISTS public.token
(
    token_id integer NOT NULL,
    PRIMARY KEY (token_id)
);

CREATE TABLE IF NOT EXISTS public.transaction
(
    transaction_id serial NOT NULL,
    account_id integer NOT NULL,
    valid_till integer NOT NULL,
    nonce integer NOT NULL,
    created_on timestamp(0) with time zone NOT NULL DEFAULT current_timestamp,
    redeemed_on timestamp(0) with time zone,
    is_pending boolean NOT NULL DEFAULT true,
    is_confirmed boolean NOT NULL DEFAULT false,
    PRIMARY KEY (transaction_id),
    UNIQUE (account_id, nonce)
);

CREATE TABLE IF NOT EXISTS public.transaction_token
(
    transaction_id integer NOT NULL,
    token_id integer NOT NULL,
    amount integer NOT NULL,
    PRIMARY KEY (transaction_id, token_id)
);

ALTER TABLE IF EXISTS public.session
    ADD FOREIGN KEY (account_id)
    REFERENCES public.account (account_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;

ALTER TABLE IF EXISTS public.token_balance
    ADD FOREIGN KEY (token_id)
    REFERENCES public.token (token_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.token_balance
    ADD FOREIGN KEY (account_id)
    REFERENCES public.account (account_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

ALTER TABLE IF EXISTS public.token_balance
    ADD CONSTRAINT positive_balance_check
	CHECK (amount >= 0);
	
ALTER TABLE IF EXISTS public.transaction
    ADD FOREIGN KEY (account_id)
    REFERENCES public.account (account_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.transaction_token
    ADD FOREIGN KEY (transaction_id)
    REFERENCES public.transaction (transaction_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.transaction_token
    ADD FOREIGN KEY (token_id)
    REFERENCES public.token (token_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;